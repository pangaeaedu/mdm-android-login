dependencies {
    api fileTree(dir: 'libs', include: ['*.jar', '*.aar'])

//    api project(':module_cmd_basic')

    try {
        api project(':cmd_log')
    } catch (Exception ignored) {
        api('com.nd.android.adhoc:cmd_log:0.0.9-develop-SNAPSHOT') {
//            exclude group: 'com.nd.android.adhoc', module: 'file_transfer'
//            exclude group: 'com.nd.android.adhoc', module: 'file_transfer_api'
            exclude group: 'com.nd.android.mdm.biz', module: 'mdm_biz_common'
            exclude group: 'com.nd.android.mdm.biz', module: 'mdm_util_cmd'
        }
    }


    try {
        api project(':adhoc_communicate')
    } catch (Exception ignored) {
//        api('com.nd.android.mdm.biz:adhoc_communicate:0.0.9-develop-SNAPSHOT')
    }

    try {
        api project(':mdm_biz_common')
    } catch (Exception ignored) {
        api('com.nd.android.mdm.biz:mdm_biz_common:0.0.16-develop-SNAPSHOT')
    }


    api ("com.nd.sdp.android.serviceloader:service-loader:$service_loader_version")
    api ("com.nd.sdp.android.serviceloader:service-loader-annotation:$service_loader_version")
    annotationProcessor ("com.nd.sdp.android.serviceloader:service-loader-compiler:$service_loader_version")
}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

configurations {
    provided {
        dependencies.all { dep ->
            configurations.default.exclude group: dep.group, module: dep.name

        }
    }
    compile.extendsFrom provided
}