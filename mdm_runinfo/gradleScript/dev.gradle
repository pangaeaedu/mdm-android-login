dependencies {

    api("com.nd.android.adhoc.basic:adhoc_basic_net:$adhoc_basic_version")
    api("com.nd.android.adhoc.basic:adhoc_basic_db:$adhoc_basic_version")
    api("com.nd.android.adhoc.basic:adhoc_util_app:$adhoc_basic_version")

//    compile ("com.nd.sdp.adhoc:adhoc-sdk:$adhoc_sdk_version")


    try {
        api project(':device_control_nd3')
    } catch (Exception ignored) {
        api ("com.nd.android.adhoc:device_control_nd3:$device_control_version"){
            exclude group: 'com.nd.android.mdm.biz', module: 'mdm_biz_common'
            exclude group: 'com.nd.android.mdm.biz', module: 'mdm_env'
            exclude group: 'com.nd.android.mdm.biz', module: 'mdm_monitor'
        }
    }

    try {
        api project(":assistant_sdk")
    }catch (Exception ignore){
        api("com.nd.android.mdm.biz:assistant_sdk:$mdm_biz_version") {
        }
    }

    try {
        api project(":mdm_env")
    }catch (Exception ignore){
        api("com.nd.android.mdm.biz:mdm_env:$mdm_biz_version") {
        }
    }

    api ("com.nd.sdp.android.serviceloader:service-loader:$service_loader_version")
    api ("com.nd.sdp.android.serviceloader:service-loader-annotation:$service_loader_version")
    annotationProcessor ("com.nd.sdp.android.serviceloader:service-loader-compiler:$service_loader_version")
}


configurations {
    all*.exclude group: 'android.support'
}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

configurations {
    provided {
        dependencies.all { dep ->
            configurations.default.exclude group: dep.group, module: dep.name

        }
    }
    compile.extendsFrom provided
}